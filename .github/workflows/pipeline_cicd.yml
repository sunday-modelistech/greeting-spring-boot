# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Installation java depuis le container setup-java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Génération du JAR avec maven
      run: mvn -B package --file pom.xml
      
    #- name: Envoie du JAR sur le serveur AWS via ssh
      #uses: appleboy/scp-action@master
      #with:
        #host: ${{ secrets.AWS_HOST }}
        #username: ${{ secrets.AWS_USER }}
        #key: ${{ secrets.AWS_KEY }}
        #port: ${{ secrets.AWS_PORT }}
        #source: "target/webservice-greeting.jar"
        #target: ${{ secrets.AWS_PATH_WEBSERVICE }}
    
    - name: Construition et envoi de l'image docker sur le hub
      uses: docker/build-push-action@v1.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: sundayoyeniyi/spring-starter
        tags: 1.0.1
        tag_with_ref: true
        tag_with_sha: true
    
    - name: Execution de la commande ssh sur le serveur à deployer
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_KEY }}
        port: ${{ secrets.AWS_PORT }}
        script: |
          sudo docker stop webservice-greeting
          sudo docker rm webservice-greeting
          sudo docker pull sundayoyeniyi/spring-starter:1.0.1
          sudo docker run -d --name webservice-greeting -p 8081:8080 sundayoyeniyi/spring-starter:1.0.1
          sudo docker ps
        
    # - name: Execution de la commande ssh sur le serveur à deployer
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.AWS_HOST }}
    #     username: ${{ secrets.AWS_USER }}
    #     key: ${{ secrets.AWS_KEY }}
    #     port: ${{ secrets.AWS_PORT }}
    #     script: |
    #       docker pull sundayoyeniyi/spring-starter:1.0.1
    #       docker run -d --name webservice-greeting --port 8081:8080 sundayoyeniyi/spring-starter:1.0.1
    #       docker ps
    #       sudo systemctl stop greeting.service
    #       sudo mv /usr/local/webservice/greeting/app.jar /usr/local/webservice/greeting/app_old.jar
    #       sudo mv /usr/local/webservice/target/webservice-greeting.jar /usr/local/webservice/greeting/app.jar
    #       sudo chmod +x /usr/local/webservice/greeting/app.jar
    #       sudo systemctl start greeting.service
    #       sudo systemctl status greeting.service
